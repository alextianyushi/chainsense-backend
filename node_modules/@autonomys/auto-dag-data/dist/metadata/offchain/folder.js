import { cidOfNode, cidToString } from '../../cid/index.js';
import { IPLDNodeData, MetadataType } from '../onchain/index.js';
export const childrenMetadataFromNode = (node) => {
    var _a;
    const ipldData = IPLDNodeData.decode(node.Data);
    if (ipldData.type !== MetadataType.File && ipldData.type !== MetadataType.Folder) {
        throw new Error('Invalid metadata type');
    }
    return {
        type: ipldData.type === MetadataType.File ? 'file' : 'folder',
        cid: cidToString(cidOfNode(node)),
        totalSize: (_a = ipldData.size) !== null && _a !== void 0 ? _a : BigInt(0).valueOf(),
        name: ipldData.name,
    };
};
export const folderMetadata = (cid, children, name, uploadOptions = {}) => {
    cid = typeof cid === 'string' ? cid : cidToString(cid);
    return {
        dataCid: cid,
        totalSize: children.reduce((acc, child) => acc + child.totalSize, BigInt(0).valueOf()),
        totalFiles: children.length,
        children,
        type: 'folder',
        name: name !== null && name !== void 0 ? name : undefined,
        uploadOptions,
    };
};
